#define BLYNK_TEMPLATE_ID "Your BLYNK template ID"
#define BLYNK_TEMPLATE_NAME "Your BLYNK template name"

#include <Adafruit_Fingerprint.h>
#include <HardwareSerial.h>
#include <WiFi.h>
#include <BlynkSimpleEsp32.h>
#include <TimeLib.h>
#include <WidgetRTC.h>
#include <FS.h>
#include <SPIFFS.h>

// Wi-Fi a Blynk
char ssid[] = "Your wi-fi";
char pass[] = "Your wi-fi password";
char auth[] = "Your authorization BLYNK code";
// Fingerprint
HardwareSerial mySerial(1);
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);

// RTC modul
WidgetRTC rtc;

// Z√°mok
#define ZAMOK_PIN 25
bool zamokAktivny = false;

void setup() {
  Serial.begin(115200);
  delay(1000);

  // Inicializ√°cia SPIFFS
  if (!SPIFFS.begin(true)) {
    Serial.println("‚ùå SPIFFS sa nespustil!");
  } else {
    Serial.println("‚úÖ SPIFFS inicializovan√Ω.");
  }

  mySerial.begin(57600, SERIAL_8N1, 16, 17);
  finger.begin(57600);
  delay(5);

  if (finger.verifyPassword()) {
    Serial.println("‚úÖ Senzor odtlaƒçkov prstov n√°jden√Ω!");
  } else {
    Serial.println("‚ùå Senzor sa nena≈°iel :(");
    while (1) delay(1);
  }

  finger.getTemplateCount();

  WiFi.begin(ssid, pass);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("‚úÖ Wi-Fi pripojen√©");

  Blynk.begin(auth, ssid, pass);
  rtc.begin();

  Blynk.virtualWrite(V1, "Prilo≈æte prst");

  pinMode(ZAMOK_PIN, OUTPUT);
  digitalWrite(ZAMOK_PIN, LOW); // Z√°mok vypnut√Ω na zaƒçiatku
}

void loop() {
  Blynk.run();

  if (finger.getImage() == FINGERPRINT_OK) {
    verifyFingerprint();
  }

  delay(100);
}

void verifyFingerprint() {
  uint8_t p = finger.image2Tz();
  if (p != FINGERPRINT_OK) return;

  p = finger.fingerSearch();
  if (p == FINGERPRINT_OK) {
    int id = finger.fingerID;
    String meno = getNameFromFile(id);

    // Form√°tovan√Ω ƒças a d√°tum
    String cas = String(hour()) + ":" + (minute() < 10 ? "0" : "") + String(minute());
    String datum = (day() < 10 ? "0" : "") + String(day()) + "." +
                   (month() < 10 ? "0" : "") + String(month()) + "." +
                   String(year());

    // Log do V3
    String log = "ID: " + String(id) + "-" + meno + " | " + datum + " | " + cas;
    Blynk.virtualWrite(V3, log);

    // Zobrazenie na V1: Vitaj meno
    Blynk.virtualWrite(V1, "Vitaj " + meno);

    // ‚úÖ Otvorenie z√°mku na 3 sekundy
    digitalWrite(ZAMOK_PIN, HIGH);
    zamokAktivny = true;
    Serial.println("üîì Z√°mok otvoren√Ω (otlaƒçok)");
    delay(3000);
    digitalWrite(ZAMOK_PIN, LOW);
    zamokAktivny = false;
    Serial.println("üîí Z√°mok zatvoren√Ω (automaticky)");

    Blynk.virtualWrite(V1, "Prilo≈æte prst");

  } else if (p == FINGERPRINT_NOTFOUND) {
    Serial.println("‚ùå Odtlaƒçok nebol rozpoznan√Ω.");
    Blynk.virtualWrite(V1, "Odtlaƒçok nesed√≠");
    delay(2000);
    Blynk.virtualWrite(V1, "Prilo≈æte prst");
  } else {
    Serial.println("‚ö†Ô∏è Chyba pri vyhƒæad√°van√≠ odtlaƒçku.");
    Blynk.virtualWrite(V1, "Chyba pri overovan√≠");
    delay(2000);
    Blynk.virtualWrite(V1, "Prilo≈æte prst");
  }

  // ƒåak√°, k√Ωm sa prst odstr√°ni
  while (finger.getImage() != FINGERPRINT_NOFINGER) {
    delay(50);
  }
}

BLYNK_WRITE(V2) {
  int stav = param.asInt();  // 1 = zapnut√©, 0 = vypnut√©

  if (stav == 1) {
    digitalWrite(ZAMOK_PIN, HIGH);
    zamokAktivny = true;
    Serial.println("üîì Z√°mok otvoren√Ω (z Blynk)");
  } else {
    digitalWrite(ZAMOK_PIN, LOW);
    zamokAktivny = false;
    Serial.println("üîí Z√°mok zatvoren√Ω (z Blynk)");
  }
}

// ‚úÖ Funkcia na ulo≈æenie mena do SPIFFS (napr. pri enrollovan√≠)
void saveNameToFile(uint8_t id, String meno) {
  File file = SPIFFS.open("/users.txt", FILE_APPEND);
  if (!file) {
    Serial.println("‚ùå Nepodarilo sa otvori≈• s√∫bor na z√°pis.");
    return;
  }
  file.printf("%d:%s\n", id, meno.c_str());
  file.close();
  Serial.println("‚úÖ Meno ulo≈æen√©.");
}

// ‚úÖ Funkcia na naƒç√≠tanie mena zo s√∫boru podƒæa ID
String getNameFromFile(uint8_t id) {
  File file = SPIFFS.open("/users.txt", FILE_READ);
  if (!file) {
    Serial.println("‚ùå S√∫bor neexistuje.");
    return "Nezn√°my";
  }

  while (file.available()) {
    String line = file.readStringUntil('\n');
    int delim = line.indexOf(':');
    if (delim > 0) {
      int fileId = line.substring(0, delim).toInt();
      String name = line.substring(delim + 1);
      name.trim();
      if (fileId == id) {
        file.close();
        return name;
      }
    }
  }

  file.close();
  return "Nezn√°my";
}
